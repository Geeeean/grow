// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package storage

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    name, email, password
) VALUES ($1, $2, $3)
RETURNING id, name, email
`

type CreateUserParams struct {
	Name     string
	Email    string
	Password string
}

type CreateUserRow struct {
	ID    uuid.UUID
	Name  string
	Email string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Name, arg.Email, arg.Password)
	var i CreateUserRow
	err := row.Scan(&i.ID, &i.Name, &i.Email)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, name, email, password FROM users WHERE email = $1
`

type GetUserRow struct {
	ID       uuid.UUID
	Name     string
	Email    string
	Password string
}

func (q *Queries) GetUser(ctx context.Context, email string) (GetUserRow, error) {
	row := q.db.QueryRowContext(ctx, getUser, email)
	var i GetUserRow
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Password,
	)
	return i, err
}
